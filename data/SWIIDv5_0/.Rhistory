Polity[97,18] <- Polity[124,18]
Polity[97,19] <- Polity[124,19]
Polity[97,20] <- Polity[124,20]
Polity[97,21] <- Polity[124,21]
Polity[97,22] <- Polity[124,22]
Polity[97,23] <- Polity[124,23]
Polity[97,24] <- Polity[124,24]
Polity[97,25] <- Polity[124,25]
Polity[97,26] <- Polity[124,26]
################################################################################
## File name: 	Reexamining_Heckscher-Ohlin.R
## Started:     August 29, 2015
## Updated:     September 20, 2015
## Author:      Benjamin S. Knight (knight.benjamin@gmail.com)
## Purpose: 	Downloads and creates data tables of economic inequality from
##              three major datasets: The Standardized World Income Inequality
##              Database (SWIID) by Frederick Solt, the Estimated Household
##              Income Inequality Data Set by the University of Texas Inequality
##              Project, and the UNU-WIDER World Income Inequality Database
##              (WIID) from the United Nations University World Institute for
##              Development Economics Research
################################################################################
# clear working environment
rm(list=ls())
# install necessary packages
# install.packages("xlsx")
# install.packages("gdata")
# install.packages("data.table")
devtools::install_github("hadley/haven")
require(haven)     # NOTE: You may need to update Java from
require(xlsx)      # https://support.apple.com/kb/DL1572?locale=en_US to run the xlsx package
library(gdata)
library(readstata13)
library(data.table)
setwd(paste("/Users/benjaminknight/Documents",
"/Personal Training/Trade Project",
"/GitVersion", sep=""))
if (!file.exists("data")) {dir.create("data")}
setwd("./data")
if (!file.exists("WIID3b_1.xls")) {
fileUrl_1 <- paste("http://www.wider.unu.edu/research/WIID3-0B",
"/en_GB/wiid/_files/92393927664936620",
"/default/WIID3b.xls", sep="")
download.file(fileUrl_1, destfile = "./WIID3b_1.xls")
rm(fileUrl_1)}
if (!file.exists("EHII-UPDATED-10-30-2013.xlsx")) {
fileUrl_2 <- "http://utip.gov.utexas.edu/data/EHII-UPDATED-10-30-2013.xlsx"
download.file(fileUrl_2, destfile = "./EHII-UPDATED-10-30-2013.xlsx",
method = "curl")
rm(fileUrl_2)}
if (!file.exists("SWIIDv5_0.zip")) {
fileUrl_3 <- "https://dataverse.harvard.edu/api/access/datafile/2503756"
download.file(fileUrl_3, destfile = "./SWIIDv5_0.zip", method = "curl") # 11.1mb
rm(fileUrl_3)}
# Acquire the IMF trade data from the Direction of Trade (DOT) dataset
# if (!file.exists("DOT_09-14-2015 04-15-20-95_panel.zip")) {
#        fileUrl_4 <- paste("http://data-download.imf.org/GetFileService.svc",
#                           "/GetFile/84916d7d-0615-4b40-8ded-c404f3111518", sep="")
#        download.file(fileUrl_4, destfile = "./DOT_09-14-2015 04-15-20-95_panel.zip",
#                      method = "curl") # 306.3mb
#        rm(fileUrl_4)}
# Acquire the Polity IV data from the Center Systemic Peace
if (!file.exists("p4v2014.xls")) {
fileUrl_5 <- "http://www.systemicpeace.org/inscr/p4v2014.xls"
download.file(fileUrl_5, destfile = "./p4v2014.xls", method = "curl") # 11.1mb
rm(fileUrl_5)}
# Read the downloaded data into R
WIID <- data.table(read.xls("WIID3b_1.xls", sheet = "Sheet1")) # 4mb
EHII <- data.table(read.xlsx2("EHII-UPDATED-10-30-2013.xlsx",
sheetName = "Sheet1")) # 70kb
Polity <- data.table(read.xls("p4v2014.xls", sheet = "p4v2014")) # 4.2mb
unzip("SWIIDv5_0.zip", unzip = "internal")
setwd("./SWIIDv5_0")
SWIID <- data.table(read_dta("SWIIDv5_0.dta"))
# Tidy the WIID data
library(dplyr)
WIID <- select(WIID, Countrycode2, Countrycode3, Country, Year, Gini, Quality)
WIID$Quality <- as.character(WIID$Quality)
WIID <- filter(WIID,  Year >= 1963 & Year <= 2008)
dropped_countries <- c("Ussr", "Bahamas", "Belarus", "Puerto Rico", "Taiwan", "West Bank And Gaza",
"East Timor", "Yugoslavia", "Bhutan", "Cape Verde", "Chad", "Barbados",
"Comoros", "Congo", "Czechoslovakia", "Djibouti", "Guinea", "Belize",
"Guinea-Bissau", "Guyana", "Laos", "Lebanon", "St. Lucia", "Hong Kong",
"Maldives", "Mali", "Mauritania", "Micronesia, Federated States Of",
"Montenegro", "Namibia", "Niger", "Reunion", "Sao Tome And Principe",
"Serbia", "Serbia And Montenegro", "Sierra Leone", "Tajikistan", "Iceland",
"Turkmenistan", "Uzbekistan", "Vietnam", "Iraq", "Myanmar", "Qatar",
"Malta", "Seychelles")
WIID <- filter(WIID,  !(Country %in% dropped_countries))
WIID$Quality[WIID$Quality == "High"] <- 3              # assign numeric code to the quality estimate
WIID$Quality[WIID$Quality == "Average"] <- 2
WIID$Quality[WIID$Quality == "Low"] <- 1
WIID$Quality[WIID$Quality == "Not known"] <- 0
WIID$Quality <- as.numeric(WIID$Quality)
WIID$ID <- as.character(paste(WIID$Country, WIID$Year, sep = ""))                    # create an ID variable
max <- aggregate(x = WIID$Quality, by = list(WIID$Country, WIID$Year), FUN = "max")  # create a max value
max$ID <- as.character(paste(max$Group.1, max$Group.2, sep = ""))                    # create an ID variable
combined <- merge(WIID, max, by = "ID")                                              # merge data sets
combined <- select(combined, Countrycode2, Countrycode3, Country, Year, Gini, Quality, x)
combined <- combined[combined$Quality >= combined$x]
library(doBy)
combined <- summaryBy(Gini ~ Country + Year, data = combined)
library(reshape2)
WIID <- dcast(combined, Country ~ Year, value.var = "Gini.mean")
rm(max, combined, dropped_countries)
WIID$Country <- as.character(WIID$Country)
WIID$Country[WIID$Country == "Bosnia And Herzegowina"] <- "Bosnia and Herzegovina"
WIID$Country[WIID$Country == "Central Affrican Republic"] <- "Central African Republic"
WIID$Country[WIID$Country == "Congo, The Drc"] <- "Congo"
WIID$Country[WIID$Country == "Cote D'Ivoire"] <- "Ivory Coast"
WIID$Country[WIID$Country == "Korea, Republic Of"] <- "Republic of Korea"
WIID$Country[WIID$Country == "Slovak Republic"] <- "Slovakia"
WIID$Country[WIID$Country == "Macedonia, Fyr"] <- "Macedonia"
WIID$Country[WIID$Country == "Slovak Republic"] <- "Slovakia"
WIID$Country[WIID$Country == "Trinidad And Tobago"] <- "Trinidad and Tobago"
WIID$Country[WIID$Country == "Zimbabwe\xa0"] <- "Zimbabwe"
WIID$Country[WIID$Country == "Russian Federation"] <- "Russia"
WIID <- WIID[order(WIID$Country),]
rownames(WIID) <- seq(length=nrow(WIID))
WIID$Data_Source <- "WIID"
# Tidy the EHII data
library(data.table)
EHII <- setnames(EHII, old = c("X1963", "X1964", "X1965", "X1966", "X1967",
"X1968", "X1969", "X1970", "X1971", "X1972", "X1973", "X1974", "X1975",
"X1976", "X1977", "X1978", "X1979", "X1980", "X1981", "X1982", "X1983",
"X1984", "X1985", "X1986", "X1987", "X1988", "X1989", "X1990", "X1991",
"X1992", "X1993", "X1994", "X1995", "X1996", "X1997", "X1998", "X1999",
"X2000", "X2001", "X2002", "X2003", "X2004", "X2005", "X2006", "X2007",
"X2008"), new = c("1963", "1964", "1965", "1966", "1967", "1968", "1969",
"1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978",
"1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987",
"1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996",
"1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005",
"2006", "2007", "2008"))
EHII <- setnames(EHII, old = "Code..", new = "drop")
EHII$drop <- NULL
EHII$Code <- NULL
EHII$Country <- as.character(EHII$Country)
EHII$Country[EHII$Country == "Bolivia (Plurinational State of)"] <- "Bolivia"
EHII$Country[EHII$Country == "Iran (Islamic Republic of)"] <- "Iran"
EHII$Country[EHII$Country == "Myanmar (Burma)"] <- "Myanmar"
EHII$Country[EHII$Country == "Peru*"] <- "Peru"
EHII$Country[EHII$Country == "Republic of Moldova"] <- "Moldova"
EHII$Country[EHII$Country == "CÃ´te d'Ivoire"] <- "Ivory Coast"
EHII$Country[EHII$Country == "Syrian Arab Republic"] <- "Syria"
EHII$Country[EHII$Country == "The f. Yugosl. Rep. of Macedonia"] <- "Macedonia"
EHII$Country[EHII$Country == "United Republic of Tanzania"] <- "Tanzania"
EHII$Country[EHII$Country == "United States of America"] <- "United States"
EHII$Country[EHII$Country == "Russian Federation"] <- "Russia"
dropped_countries_EHII <- c("Bahamas", "China (Macao SAR)", "China (Taiwan Province)",
"Eritrea", "Germany, Dem.Rep", "Germany, Fed.Rep", "Belize",
"Kuwait", "Libyan Arab Jamahiriya", "Oman", "Barbados",
"Puerto Rico", "Tonga", "United Arab Emirates",
"Yugoslavia", "Iraq", "Myanmar", "Qatar", "Iceland",
"China (Hong Kong SAR)", "Malta", "Seychelles")
EHII <- filter(EHII, !(Country %in% dropped_countries_EHII))
EHII <- EHII[order(EHII$Country),]
rownames(EHII) <- seq(length=nrow(EHII))
rm(dropped_countries_EHII)
EHII$Data_Source <- "EHII"
# Tidy the SWIID data
library(dplyr)
SWIID <- filter(SWIID,  year >= 1963 & year <= 2008)
SWIID <- as.data.frame(SWIID)
means <- SWIID[,c(4:103)]
labels <- SWIID[,c(1:2)]
means <- as.data.frame(rowMeans(means))
SWIID <- cbind(labels, means)
rm(labels, means)
library(reshape2)
SWIID <- dcast(SWIID, country ~ year, value.var = "rowMeans(means)")
SWIID <- rename(SWIID, Country = country)
dropped_countries_SWIID <- c("Andorra", "Anguilla", "Bahamas", "Belarus", "Bhutan",
"Cape Verde", "Cayman Islands", "Chad", "Barbados",
"Comoros", "Congo, Republic of", "Czechoslovakia",
"Djibouti", "Dominica", "Grenada", "Guinea", "Belize",
"Guinea-Bissau", "Guyana", "Lao", "Lebanon", "Maldives",
"Mali", "Mauritania", "Montenegro", "Namibia", "Niger",
"Puerto Rico", "Sao Tome and Principe", "Serbia",
"Serbia and Montenegro", "Sierra Leone", "St. Lucia",
"St. Vincent and the Grenadines", "Taiwan", "Tajikistan",
"Timor-Leste", "Turkmenistan", "Turks and Caicos",
"USSR", "Uzbekistan", "Viet Nam", "Yugoslavia",
"Hong Kong", "Iceland", "Malta", "Seychelles")
SWIID <- filter(SWIID,  !(Country %in% dropped_countries_SWIID))
SWIID$Country[SWIID$Country == "Congo, Democratic Republic of"] <- "Congo"
SWIID$Country[SWIID$Country == "Cote d'Ivoire"] <- "Ivory Coast"
SWIID$Country[SWIID$Country == "Korea, Republic of"] <- "Republic of Korea"
SWIID$Country[SWIID$Country == "Kyrgyz Republic"] <- "Kyrgyzstan"
SWIID$Country[SWIID$Country == "Macedonia, FYR"] <- "Macedonia"
SWIID$Country[SWIID$Country == "Slovak Republic"] <- "Slovakia"
SWIID$Country[SWIID$Country == "Yemen, Republic of"] <- "Yemen"
SWIID$Country[SWIID$Country == "Russian Federation"] <- "Russia"
SWIID <- SWIID[order(SWIID$Country),]
rownames(SWIID) <- seq(length=nrow(SWIID))
rm(dropped_countries_SWIID)
SWIID$Data_Source <- "SWIID"
# Tidy the Polity data
library(dplyr)
Polity <- filter(Polity,  year >= 1963 & year <= 2008)
Polity[97,2] <- Polity[124,2]
Polity[97,3] <- Polity[124,3]
Polity[97,4] <- Polity[124,4]
Polity[97,5] <- Polity[124,5]
Polity[97,6] <- Polity[124,6]
Polity[97,7] <- Polity[124,7]
Polity[97,8] <- Polity[124,8]
Polity[97,9] <- Polity[124,9]
Polity[97,10] <- Polity[124,10]
Polity[97,11] <- Polity[124,11]
Polity[97,12] <- Polity[124,12]
Polity[97,13] <- Polity[124,13]
Polity[97,14] <- Polity[124,14]
Polity[97,15] <- Polity[124,15]
Polity[97,16] <- Polity[124,16]
Polity[97,17] <- Polity[124,17]
Polity[97,18] <- Polity[124,18]
Polity[97,19] <- Polity[124,19]
Polity[97,20] <- Polity[124,20]
Polity[97,21] <- Polity[124,21]
Polity[97,22] <- Polity[124,22]
Polity[97,23] <- Polity[124,23]
Polity[97,24] <- Polity[124,24]
Polity[97,25] <- Polity[124,25]
Polity[97,26] <- Polity[124,26]
Polity[97,27] <- Polity[124,27]
Polity[97,28] <- Polity[124,28]
Polity[97,29] <- Polity[124,29]
Polity[97,30] <- Polity[124,30]
Polity <- select(Polity, country, year, polity2)
Polity <- dcast(Polity, country ~ year, value.var = "polity2", fun=mean)
dropped_countries_Polity <- c("Bahrain", "Belarus", "Bhutan", "Cape Verde", "Chad",
"Comoros", "Congo Brazzaville", "Czechoslovakia",
"Djibouti", "East Timor", "Equatorial Guinea", "Eritrea",
"Germany East", "Germany West", "Guinea", "Guinea-Bissau",
"Guyana", "Iraq", "Korea North", "Kosovo", "Kuwait",
"Laos", "Lebanon", "Libya", "Mali", "Mauritania", "Montenegro",
"Myanmar (Burma)", "Namibia", "Niger", "Oman", "Qatar",
"Saudi Arabia", "Serbia", "Serbia and Montenegro", "Sierra Leone",
"Solomon Islands", "Taiwan", "Tajikistan", "Turkmenistan",
"UAE", "Uzbekistan", "Vietnam", "Vietnam North", "Vietnam South",
"Yemen North", "Yemen South", "Yugoslavia")
Polity <- filter(Polity,  !(country %in% dropped_countries_Polity))
Polity$country <- as.character(Polity$country)
Polity$country[Polity$country == "Bosnia"] <- "Bosnia and Herzegovina"
Polity$country[Polity$country == "Congo Kinshasa"] <- "Congo"
Polity$country[Polity$country == "Korea South"] <- "Republic of Korea"
Polity$country[Polity$country == "Slovak Republic"] <- "Slovakia"
Polity <- Polity[order(Polity$country),]
rownames(Polity) <- seq(length=nrow(Polity))
rm(dropped_countries_Polity)
####################################################
Polity <- data.table(read.xls("p4v2014.xls", sheet = "p4v2014")) # 4.2mb
setwd(paste("/Users/benjaminknight/Documents",
"/Personal Training/Trade Project",
"/GitVersion", sep=""))
if (!file.exists("data")) {dir.create("data")}
Polity <- data.table(read.xls("p4v2014.xls", sheet = "p4v2014")) # 4.2mb
setwd(paste("/Users/benjaminknight/Documents",
"/Personal Training/Trade Project",
"/GitVersion", sep=""))
if (!file.exists("data")) {dir.create("data")}
setwd("./data")
Polity <- data.table(read.xls("p4v2014.xls", sheet = "p4v2014")) # 4.2mb
library(dplyr)
Polity <- filter(Polity,  year >= 1963 & year <= 2008)
Polity <- select(Polity, country, year, polity2)
Polity <- dcast(Polity, country ~ year, value.var = "polity2", fun=mean)
View(Polity)
################################################################################
## File name: 	Reexamining_Heckscher-Ohlin.R
## Started:     August 29, 2015
## Updated:     September 20, 2015
## Author:      Benjamin S. Knight (knight.benjamin@gmail.com)
## Purpose: 	Downloads and creates data tables of economic inequality from
##              three major datasets: The Standardized World Income Inequality
##              Database (SWIID) by Frederick Solt, the Estimated Household
##              Income Inequality Data Set by the University of Texas Inequality
##              Project, and the UNU-WIDER World Income Inequality Database
##              (WIID) from the United Nations University World Institute for
##              Development Economics Research
################################################################################
# clear working environment
rm(list=ls())
# install necessary packages
# install.packages("xlsx")
# install.packages("gdata")
# install.packages("data.table")
devtools::install_github("hadley/haven")
require(haven)     # NOTE: You may need to update Java from
require(xlsx)      # https://support.apple.com/kb/DL1572?locale=en_US to run the xlsx package
library(gdata)
library(readstata13)
library(data.table)
setwd(paste("/Users/benjaminknight/Documents",
"/Personal Training/Trade Project",
"/GitVersion", sep=""))
if (!file.exists("data")) {dir.create("data")}
setwd("./data")
if (!file.exists("WIID3b_1.xls")) {
fileUrl_1 <- paste("http://www.wider.unu.edu/research/WIID3-0B",
"/en_GB/wiid/_files/92393927664936620",
"/default/WIID3b.xls", sep="")
download.file(fileUrl_1, destfile = "./WIID3b_1.xls")
rm(fileUrl_1)}
if (!file.exists("EHII-UPDATED-10-30-2013.xlsx")) {
fileUrl_2 <- "http://utip.gov.utexas.edu/data/EHII-UPDATED-10-30-2013.xlsx"
download.file(fileUrl_2, destfile = "./EHII-UPDATED-10-30-2013.xlsx",
method = "curl")
rm(fileUrl_2)}
if (!file.exists("SWIIDv5_0.zip")) {
fileUrl_3 <- "https://dataverse.harvard.edu/api/access/datafile/2503756"
download.file(fileUrl_3, destfile = "./SWIIDv5_0.zip", method = "curl") # 11.1mb
rm(fileUrl_3)}
# Acquire the IMF trade data from the Direction of Trade (DOT) dataset
# if (!file.exists("DOT_09-14-2015 04-15-20-95_panel.zip")) {
#        fileUrl_4 <- paste("http://data-download.imf.org/GetFileService.svc",
#                           "/GetFile/84916d7d-0615-4b40-8ded-c404f3111518", sep="")
#        download.file(fileUrl_4, destfile = "./DOT_09-14-2015 04-15-20-95_panel.zip",
#                      method = "curl") # 306.3mb
#        rm(fileUrl_4)}
# Acquire the Polity IV data from the Center Systemic Peace
if (!file.exists("p4v2014.xls")) {
fileUrl_5 <- "http://www.systemicpeace.org/inscr/p4v2014.xls"
download.file(fileUrl_5, destfile = "./p4v2014.xls", method = "curl") # 11.1mb
rm(fileUrl_5)}
# Read the downloaded data into R
WIID <- data.table(read.xls("WIID3b_1.xls", sheet = "Sheet1")) # 4mb
EHII <- data.table(read.xlsx2("EHII-UPDATED-10-30-2013.xlsx",
sheetName = "Sheet1")) # 70kb
Polity <- data.table(read.xls("p4v2014.xls", sheet = "p4v2014")) # 4.2mb
unzip("SWIIDv5_0.zip", unzip = "internal")
setwd("./SWIIDv5_0")
SWIID <- data.table(read_dta("SWIIDv5_0.dta"))
# Tidy the WIID data
library(dplyr)
WIID <- select(WIID, Countrycode2, Countrycode3, Country, Year, Gini, Quality)
WIID$Quality <- as.character(WIID$Quality)
WIID <- filter(WIID,  Year >= 1963 & Year <= 2008)
dropped_countries <- c("Ussr", "Bahamas", "Belarus", "Puerto Rico", "Taiwan", "West Bank And Gaza",
"East Timor", "Yugoslavia", "Bhutan", "Cape Verde", "Chad", "Barbados",
"Comoros", "Congo", "Czechoslovakia", "Djibouti", "Guinea", "Belize",
"Guinea-Bissau", "Guyana", "Laos", "Lebanon", "St. Lucia", "Hong Kong",
"Maldives", "Mali", "Mauritania", "Micronesia, Federated States Of",
"Montenegro", "Namibia", "Niger", "Reunion", "Sao Tome And Principe",
"Serbia", "Serbia And Montenegro", "Sierra Leone", "Tajikistan", "Iceland",
"Turkmenistan", "Uzbekistan", "Vietnam", "Iraq", "Myanmar", "Qatar",
"Malta", "Seychelles")
WIID <- filter(WIID,  !(Country %in% dropped_countries))
WIID$Quality[WIID$Quality == "High"] <- 3              # assign numeric code to the quality estimate
WIID$Quality[WIID$Quality == "Average"] <- 2
WIID$Quality[WIID$Quality == "Low"] <- 1
WIID$Quality[WIID$Quality == "Not known"] <- 0
WIID$Quality <- as.numeric(WIID$Quality)
WIID$ID <- as.character(paste(WIID$Country, WIID$Year, sep = ""))                    # create an ID variable
max <- aggregate(x = WIID$Quality, by = list(WIID$Country, WIID$Year), FUN = "max")  # create a max value
max$ID <- as.character(paste(max$Group.1, max$Group.2, sep = ""))                    # create an ID variable
combined <- merge(WIID, max, by = "ID")                                              # merge data sets
combined <- select(combined, Countrycode2, Countrycode3, Country, Year, Gini, Quality, x)
combined <- combined[combined$Quality >= combined$x]
library(doBy)
combined <- summaryBy(Gini ~ Country + Year, data = combined)
library(reshape2)
WIID <- dcast(combined, Country ~ Year, value.var = "Gini.mean")
rm(max, combined, dropped_countries)
WIID$Country <- as.character(WIID$Country)
WIID$Country[WIID$Country == "Bosnia And Herzegowina"] <- "Bosnia and Herzegovina"
WIID$Country[WIID$Country == "Central Affrican Republic"] <- "Central African Republic"
WIID$Country[WIID$Country == "Congo, The Drc"] <- "Congo"
WIID$Country[WIID$Country == "Cote D'Ivoire"] <- "Ivory Coast"
WIID$Country[WIID$Country == "Korea, Republic Of"] <- "Republic of Korea"
WIID$Country[WIID$Country == "Slovak Republic"] <- "Slovakia"
WIID$Country[WIID$Country == "Macedonia, Fyr"] <- "Macedonia"
WIID$Country[WIID$Country == "Slovak Republic"] <- "Slovakia"
WIID$Country[WIID$Country == "Trinidad And Tobago"] <- "Trinidad and Tobago"
WIID$Country[WIID$Country == "Zimbabwe\xa0"] <- "Zimbabwe"
WIID$Country[WIID$Country == "Russian Federation"] <- "Russia"
WIID <- WIID[order(WIID$Country),]
rownames(WIID) <- seq(length=nrow(WIID))
WIID$Data_Source <- "WIID"
# Tidy the EHII data
library(data.table)
EHII <- setnames(EHII, old = c("X1963", "X1964", "X1965", "X1966", "X1967",
"X1968", "X1969", "X1970", "X1971", "X1972", "X1973", "X1974", "X1975",
"X1976", "X1977", "X1978", "X1979", "X1980", "X1981", "X1982", "X1983",
"X1984", "X1985", "X1986", "X1987", "X1988", "X1989", "X1990", "X1991",
"X1992", "X1993", "X1994", "X1995", "X1996", "X1997", "X1998", "X1999",
"X2000", "X2001", "X2002", "X2003", "X2004", "X2005", "X2006", "X2007",
"X2008"), new = c("1963", "1964", "1965", "1966", "1967", "1968", "1969",
"1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978",
"1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987",
"1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996",
"1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005",
"2006", "2007", "2008"))
EHII <- setnames(EHII, old = "Code..", new = "drop")
EHII$drop <- NULL
EHII$Code <- NULL
EHII$Country <- as.character(EHII$Country)
EHII$Country[EHII$Country == "Bolivia (Plurinational State of)"] <- "Bolivia"
EHII$Country[EHII$Country == "Iran (Islamic Republic of)"] <- "Iran"
EHII$Country[EHII$Country == "Myanmar (Burma)"] <- "Myanmar"
EHII$Country[EHII$Country == "Peru*"] <- "Peru"
EHII$Country[EHII$Country == "Republic of Moldova"] <- "Moldova"
EHII$Country[EHII$Country == "CÃ´te d'Ivoire"] <- "Ivory Coast"
EHII$Country[EHII$Country == "Syrian Arab Republic"] <- "Syria"
EHII$Country[EHII$Country == "The f. Yugosl. Rep. of Macedonia"] <- "Macedonia"
EHII$Country[EHII$Country == "United Republic of Tanzania"] <- "Tanzania"
EHII$Country[EHII$Country == "United States of America"] <- "United States"
EHII$Country[EHII$Country == "Russian Federation"] <- "Russia"
dropped_countries_EHII <- c("Bahamas", "China (Macao SAR)", "China (Taiwan Province)",
"Eritrea", "Germany, Dem.Rep", "Germany, Fed.Rep", "Belize",
"Kuwait", "Libyan Arab Jamahiriya", "Oman", "Barbados",
"Puerto Rico", "Tonga", "United Arab Emirates",
"Yugoslavia", "Iraq", "Myanmar", "Qatar", "Iceland",
"China (Hong Kong SAR)", "Malta", "Seychelles")
EHII <- filter(EHII, !(Country %in% dropped_countries_EHII))
EHII <- EHII[order(EHII$Country),]
rownames(EHII) <- seq(length=nrow(EHII))
rm(dropped_countries_EHII)
EHII$Data_Source <- "EHII"
# Tidy the SWIID data
library(dplyr)
SWIID <- filter(SWIID,  year >= 1963 & year <= 2008)
SWIID <- as.data.frame(SWIID)
means <- SWIID[,c(4:103)]
labels <- SWIID[,c(1:2)]
means <- as.data.frame(rowMeans(means))
SWIID <- cbind(labels, means)
rm(labels, means)
library(reshape2)
SWIID <- dcast(SWIID, country ~ year, value.var = "rowMeans(means)")
SWIID <- rename(SWIID, Country = country)
dropped_countries_SWIID <- c("Andorra", "Anguilla", "Bahamas", "Belarus", "Bhutan",
"Cape Verde", "Cayman Islands", "Chad", "Barbados",
"Comoros", "Congo, Republic of", "Czechoslovakia",
"Djibouti", "Dominica", "Grenada", "Guinea", "Belize",
"Guinea-Bissau", "Guyana", "Lao", "Lebanon", "Maldives",
"Mali", "Mauritania", "Montenegro", "Namibia", "Niger",
"Puerto Rico", "Sao Tome and Principe", "Serbia",
"Serbia and Montenegro", "Sierra Leone", "St. Lucia",
"St. Vincent and the Grenadines", "Taiwan", "Tajikistan",
"Timor-Leste", "Turkmenistan", "Turks and Caicos",
"USSR", "Uzbekistan", "Viet Nam", "Yugoslavia",
"Hong Kong", "Iceland", "Malta", "Seychelles")
SWIID <- filter(SWIID,  !(Country %in% dropped_countries_SWIID))
SWIID$Country[SWIID$Country == "Congo, Democratic Republic of"] <- "Congo"
SWIID$Country[SWIID$Country == "Cote d'Ivoire"] <- "Ivory Coast"
SWIID$Country[SWIID$Country == "Korea, Republic of"] <- "Republic of Korea"
SWIID$Country[SWIID$Country == "Kyrgyz Republic"] <- "Kyrgyzstan"
SWIID$Country[SWIID$Country == "Macedonia, FYR"] <- "Macedonia"
SWIID$Country[SWIID$Country == "Slovak Republic"] <- "Slovakia"
SWIID$Country[SWIID$Country == "Yemen, Republic of"] <- "Yemen"
SWIID$Country[SWIID$Country == "Russian Federation"] <- "Russia"
SWIID <- SWIID[order(SWIID$Country),]
rownames(SWIID) <- seq(length=nrow(SWIID))
rm(dropped_countries_SWIID)
SWIID$Data_Source <- "SWIID"
# Tidy the Polity data
library(dplyr)
Polity <- filter(Polity,  year >= 1963 & year <= 2008)
Polity[129,2] <- Polity[165,2]
Polity[129,3] <- Polity[165,3]
Polity[129,4] <- Polity[165,4]
Polity[129,5] <- Polity[165,5]
Polity[129,6] <- Polity[165,6]
Polity[129,7] <- Polity[165,7]
Polity[129,8] <- Polity[165,8]
Polity[129,9] <- Polity[165,9]
Polity[129,10] <- Polity[165,10]
Polity[129,11] <- Polity[165,11]
Polity[129,12] <- Polity[165,12]
Polity[129,13] <- Polity[165,13]
Polity[129,14] <- Polity[165,14]
Polity[129,15] <- Polity[165,15]
Polity[129,16] <- Polity[165,16]
Polity[129,17] <- Polity[165,17]
Polity[129,18] <- Polity[165,18]
Polity[129,19] <- Polity[165,19]
Polity[129,20] <- Polity[165,20]
Polity[129,21] <- Polity[165,21]
Polity[129,22] <- Polity[165,22]
Polity[129,23] <- Polity[165,23]
Polity[129,24] <- Polity[165,24]
Polity[129,25] <- Polity[165,25]
Polity[129,26] <- Polity[165,26]
Polity[129,27] <- Polity[165,27]
Polity[129,28] <- Polity[165,28]
Polity[129,29] <- Polity[165,29]
Polity[129,30] <- Polity[165,30]
Polity <- select(Polity, country, year, polity2)
Polity <- dcast(Polity, country ~ year, value.var = "polity2", fun=mean)
dropped_countries_Polity <- c("Bahrain", "Belarus", "Bhutan", "Cape Verde", "Chad",
"Comoros", "Congo Brazzaville", "Czechoslovakia",
"Djibouti", "East Timor", "Equatorial Guinea", "Eritrea",
"Germany East", "Germany West", "Guinea", "Guinea-Bissau",
"Guyana", "Iraq", "Korea North", "Kosovo", "Kuwait",
"Laos", "Lebanon", "Libya", "Mali", "Mauritania", "Montenegro",
"Myanmar (Burma)", "Namibia", "Niger", "Oman", "Qatar",
"Saudi Arabia", "Serbia", "Serbia and Montenegro", "Sierra Leone",
"Solomon Islands", "Taiwan", "Tajikistan", "Turkmenistan",
"UAE", "Uzbekistan", "Vietnam", "Vietnam North", "Vietnam South",
"Yemen North", "Yemen South", "Yugoslavia", "USSR")
Polity <- filter(Polity,  !(country %in% dropped_countries_Polity))
Polity$country <- as.character(Polity$country)
Polity$country[Polity$country == "Bosnia"] <- "Bosnia and Herzegovina"
Polity$country[Polity$country == "Congo Kinshasa"] <- "Congo"
Polity$country[Polity$country == "Korea South"] <- "Republic of Korea"
Polity$country[Polity$country == "Slovak Republic"] <- "Slovakia"
Polity <- Polity[order(Polity$country),]
rownames(Polity) <- seq(length=nrow(Polity))
rm(dropped_countries_Polity)
View(SWIID)
